{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.14.46.61228",
      "templateHash": "723236074833404619"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "ayuina0215b"
    },
    "region": {
      "type": "string",
      "defaultValue": "westus3"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "network",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "region": {
            "value": "[parameters('region')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.46.61228",
              "templateHash": "9206085069430861184"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "region": {
              "type": "string"
            }
          },
          "variables": {
            "vnetRootRange24": "10.0.0",
            "vnetName": "[format('{0}-vnet', parameters('prefix'))]",
            "vnetRange": "[format('{0}.0/24', variables('vnetRootRange24'))]",
            "pesubnetName": "private-endpoint-subnet",
            "pesubnetRange": "[format('{0}.0/26', variables('vnetRootRange24'))]",
            "funcsubnetName": "functions-subnet",
            "funcsubnetRange": "[format('{0}.64/26', variables('vnetRootRange24'))]",
            "appsvcZoneName": "privatelink.azurewebsites.net",
            "blobZoneName": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
            "queueZoneName": "[format('privatelink.queue.{0}', environment().suffixes.storage)]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('appsvcZoneName'), 'appsvcZone-link')]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('appsvcZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('blobZoneName'), 'blobZone-link')]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('blobZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('queueZoneName'), 'queueZone-link')]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('queueZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-07-01",
              "name": "[variables('vnetName')]",
              "location": "[parameters('region')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('vnetRange')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('pesubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('pesubnetRange')]"
                    }
                  },
                  {
                    "name": "[variables('funcsubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('funcsubnetRange')]",
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverFarms"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('appsvcZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('blobZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('queueZoneName')]",
              "location": "global"
            }
          ],
          "outputs": {
            "vnetName": {
              "type": "string",
              "value": "[variables('vnetName')]"
            },
            "pesubnetName": {
              "type": "string",
              "value": "[variables('pesubnetName')]"
            },
            "funcsubnetName": {
              "type": "string",
              "value": "[variables('funcsubnetName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "platform",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "region": {
            "value": "[parameters('region')]"
          },
          "vnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2020-10-01').outputs.vnetName.value]"
          },
          "funcsubnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2020-10-01').outputs.funcsubnetName.value]"
          },
          "pesubnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2020-10-01').outputs.pesubnetName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.46.61228",
              "templateHash": "10627928833298030292"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "pesubnetName": {
              "type": "string"
            },
            "funcsubnetName": {
              "type": "string"
            }
          },
          "variables": {
            "funcStrName": "[format('{0}funcstr', replace(parameters('prefix'), '-', ''))]",
            "logAnalyticsName": "[format('{0}-laws', parameters('prefix'))]",
            "appInsightsName": "[format('{0}-ai', parameters('prefix'))]",
            "funcAppName": "[format('{0}-func', parameters('prefix'))]",
            "funcPlanName": "[format('{0}-func-plan', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[variables('funcStrName')]",
              "location": "[parameters('region')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[variables('logAnalyticsName')]",
              "location": "[parameters('region')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "features": {
                  "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                  "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('appInsightsName')]",
              "location": "[parameters('region')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[variables('funcPlanName')]",
              "location": "[parameters('region')]",
              "kind": "elastic",
              "sku": {
                "name": "EP1",
                "tier": "ElasticPremium",
                "family": "EP"
              },
              "properties": {
                "maximumElasticWorkerCount": 3
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[variables('funcAppName')]",
              "location": "[parameters('region')]",
              "kind": "functionapp",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('funcPlanName'))]",
                "clientAffinityEnabled": false,
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('funcsubnetName'))]",
                "siteConfig": {
                  "netFrameworkVersion": "v6.0",
                  "vnetRouteAllEnabled": true,
                  "functionsRuntimeScaleMonitoringEnabled": true,
                  "publicNetworkAccess": "Enabled",
                  "ipSecurityRestrictions": [
                    {
                      "priority": 1000,
                      "name": "allow-event-grid",
                      "action": "Allow",
                      "tag": "ServiceTag",
                      "ipAddress": "AzureEventGrid"
                    },
                    {
                      "priority": 100000,
                      "name": "deny-all-inbound",
                      "action": "Deny",
                      "ipAddress": "Any"
                    }
                  ],
                  "scmIpSecurityRestrictionsUseMain": true,
                  "scmIpSecurityRestrictions": [
                    {
                      "priority": 100000,
                      "name": "deny-all-inbound",
                      "action": "Deny",
                      "ipAddress": "Any"
                    }
                  ],
                  "appSettings": [
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('funcStrName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStrName')), '2022-05-01').keys[0].value)]"
                    },
                    {
                      "name": "AzureWebJobsDashboard",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('funcStrName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStrName')), '2022-05-01').keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('funcStrName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStrName')), '2022-05-01').keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(variables('funcAppName'))]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                      "name": "Project",
                      "value": "src"
                    },
                    {
                      "name": "SCM_COMMAND_IDLE_TIMEOUT",
                      "value": "180"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('funcPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('funcStrName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-pe', variables('funcAppName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "region": {
                    "value": "[parameters('region')]"
                  },
                  "svcname": {
                    "value": "[variables('funcAppName')]"
                  },
                  "svctype": {
                    "value": "Microsoft.Web/sites"
                  },
                  "zonename": {
                    "value": "privatelink.azurewebsites.net"
                  },
                  "groupId": {
                    "value": "sites"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "pesubnetName": {
                    "value": "[parameters('pesubnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.46.61228",
                      "templateHash": "15790817288533340525"
                    }
                  },
                  "parameters": {
                    "vnetName": {
                      "type": "string"
                    },
                    "pesubnetName": {
                      "type": "string"
                    },
                    "region": {
                      "type": "string"
                    },
                    "svcname": {
                      "type": "string"
                    },
                    "svctype": {
                      "type": "string"
                    },
                    "zonename": {
                      "type": "string"
                    },
                    "groupId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "pename": "[format('{0}-{1}-pe', parameters('svcname'), parameters('groupId'))]",
                    "peNicName": "[format('{0}-nic', variables('pename'))]",
                    "svcid": "[resourceId(parameters('svctype'), parameters('svcname'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', variables('pename'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zonename'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('pename'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2022-07-01",
                      "name": "[variables('pename')]",
                      "location": "[parameters('region')]",
                      "properties": {
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('pename')]",
                            "properties": {
                              "privateLinkServiceId": "[variables('svcid')]",
                              "groupIds": [
                                "[parameters('groupId')]"
                              ]
                            }
                          }
                        ],
                        "customNetworkInterfaceName": "[variables('peNicName')]",
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('pesubnetName'))]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]"
              ]
            }
          ],
          "outputs": {
            "funcAppName": {
              "type": "string",
              "value": "[variables('funcAppName')]"
            },
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "pesubnetName": {
              "type": "string",
              "value": "[parameters('pesubnetName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "bindings",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "region": {
            "value": "[parameters('region')]"
          },
          "funcAppName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'platform'), '2020-10-01').outputs.funcAppName.value]"
          },
          "vnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'platform'), '2020-10-01').outputs.vnetName.value]"
          },
          "pesubnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'platform'), '2020-10-01').outputs.pesubnetName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.46.61228",
              "templateHash": "15586183207139362143"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "pesubnetName": {
              "type": "string"
            },
            "funcAppName": {
              "type": "string"
            }
          },
          "variables": {
            "dataStrName": "[format('{0}datastr', replace(parameters('prefix'), '-', ''))]",
            "dataStrBlobPeName": "[format('{0}-blob-pe', variables('dataStrName'))]",
            "dataStrQueuePeName": "[format('{0}-queue-pe', variables('dataStrName'))]",
            "dataStrTopicName": "[format('{0}-topic', variables('dataStrName'))]",
            "eventSourceMap": {
              "eventbase_blobtrigger_container": "archive-upload-for-eventgrid",
              "standard_blobtrigger_container": "archive-upload-for-polling",
              "queuetrigger_container": "archive-upload-for-queue",
              "blob_created_queue": "archive-upload-queue",
              "extracted_container": "archive-extracted"
            },
            "eventbase_blobtrigger_function": "ExtractArchive",
            "queueSenderRoleid": "c6a89b2d-59bc-44d0-9896-0f6e12d7b80a",
            "funcSrcRepoUrl": "https://github.com/ayuina/extract-zip-function.git"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', variables('dataStrName'), 'default', variables('eventSourceMap').extracted_container)]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', variables('dataStrName'), 'default', variables('eventSourceMap').eventbase_blobtrigger_container)]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', variables('dataStrName'), 'default', variables('eventSourceMap').standard_blobtrigger_container)]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', variables('dataStrName'), 'default', variables('eventSourceMap').queuetrigger_container)]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', variables('dataStrName'), 'default', variables('eventSourceMap').blob_created_queue)]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[variables('dataStrName')]",
              "location": "[parameters('region')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              }
            },
            {
              "type": "Microsoft.Web/sites/sourcecontrols",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('funcAppName'), 'web')]",
              "properties": {
                "repoUrl": "[variables('funcSrcRepoUrl')]",
                "branch": "main",
                "isManualIntegration": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'mergeSettings')]"
              ]
            },
            {
              "type": "Microsoft.EventGrid/systemTopics",
              "apiVersion": "2022-06-15",
              "name": "[variables('dataStrTopicName')]",
              "location": "[parameters('region')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]",
                "topicType": "Microsoft.Storage.StorageAccounts"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/sourcecontrols', parameters('funcAppName'), 'web')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]"
              ]
            },
            {
              "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
              "apiVersion": "2022-06-15",
              "name": "[format('{0}/{1}', variables('dataStrTopicName'), 'ZipUploaded')]",
              "properties": {
                "eventDeliverySchema": "EventGridSchema",
                "filter": {
                  "subjectBeginsWith": "[format('/blobServices/default/containers/{0}/', variables('eventSourceMap').eventbase_blobtrigger_container)]",
                  "subjectEndsWith": ".zip",
                  "includedEventTypes": [
                    "Microsoft.Storage.BlobCreated"
                  ]
                },
                "destination": {
                  "endpointType": "WebHook",
                  "properties": {
                    "endpointUrl": "[format('https://{0}/runtime/webhooks/blobs?functionName={1}&code={2}', reference(resourceId('Microsoft.Web/sites', parameters('funcAppName')), '2022-03-01').hostNames[0], variables('eventbase_blobtrigger_function'), listkeys(format('{0}/host/default', resourceId('Microsoft.Web/sites', parameters('funcAppName'))), '2022-03-01').systemKeys.blobs_extension)]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('dataStrName'), 'default', variables('eventSourceMap').eventbase_blobtrigger_container)]",
                "[resourceId('Microsoft.EventGrid/systemTopics', variables('dataStrTopicName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('dataStrName'))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName')), resourceId('Microsoft.EventGrid/systemTopics', variables('dataStrTopicName')), variables('queueSenderRoleid'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('queueSenderRoleid'))]",
                "principalType": "ServicePrincipal",
                "principalId": "[reference(resourceId('Microsoft.EventGrid/systemTopics', variables('dataStrTopicName')), '2022-06-15', 'full').identity.principalId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]",
                "[resourceId('Microsoft.EventGrid/systemTopics', variables('dataStrTopicName'))]"
              ]
            },
            {
              "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
              "apiVersion": "2022-06-15",
              "name": "[format('{0}/{1}', variables('dataStrTopicName'), 'EnqueZipUploaded')]",
              "properties": {
                "eventDeliverySchema": "EventGridSchema",
                "filter": {
                  "subjectBeginsWith": "[format('/blobServices/default/containers/{0}/', variables('eventSourceMap').queuetrigger_container)]",
                  "subjectEndsWith": ".zip",
                  "includedEventTypes": [
                    "Microsoft.Storage.BlobCreated"
                  ]
                },
                "deliveryWithResourceIdentity": {
                  "identity": {
                    "type": "SystemAssigned"
                  },
                  "destination": {
                    "endpointType": "StorageQueue",
                    "properties": {
                      "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]",
                      "queueName": "[variables('eventSourceMap').blob_created_queue]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices/queues', variables('dataStrName'), 'default', variables('eventSourceMap').blob_created_queue)]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]",
                "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName')), 'Microsoft.Authorization/roleAssignments', guid(resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName')), resourceId('Microsoft.EventGrid/systemTopics', variables('dataStrTopicName')), variables('queueSenderRoleid')))]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('dataStrName'), 'default', variables('eventSourceMap').queuetrigger_container)]",
                "[resourceId('Microsoft.EventGrid/systemTopics', variables('dataStrTopicName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('dataStrBlobPeName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "region": {
                    "value": "[parameters('region')]"
                  },
                  "svcname": {
                    "value": "[variables('dataStrName')]"
                  },
                  "svctype": {
                    "value": "Microsoft.Storage/storageAccounts"
                  },
                  "zonename": {
                    "value": "[format('privatelink.blob.{0}', environment().suffixes.storage)]"
                  },
                  "groupId": {
                    "value": "blob"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "pesubnetName": {
                    "value": "[parameters('pesubnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.46.61228",
                      "templateHash": "15790817288533340525"
                    }
                  },
                  "parameters": {
                    "vnetName": {
                      "type": "string"
                    },
                    "pesubnetName": {
                      "type": "string"
                    },
                    "region": {
                      "type": "string"
                    },
                    "svcname": {
                      "type": "string"
                    },
                    "svctype": {
                      "type": "string"
                    },
                    "zonename": {
                      "type": "string"
                    },
                    "groupId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "pename": "[format('{0}-{1}-pe', parameters('svcname'), parameters('groupId'))]",
                    "peNicName": "[format('{0}-nic', variables('pename'))]",
                    "svcid": "[resourceId(parameters('svctype'), parameters('svcname'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', variables('pename'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zonename'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('pename'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2022-07-01",
                      "name": "[variables('pename')]",
                      "location": "[parameters('region')]",
                      "properties": {
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('pename')]",
                            "properties": {
                              "privateLinkServiceId": "[variables('svcid')]",
                              "groupIds": [
                                "[parameters('groupId')]"
                              ]
                            }
                          }
                        ],
                        "customNetworkInterfaceName": "[variables('peNicName')]",
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('pesubnetName'))]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('dataStrQueuePeName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "region": {
                    "value": "[parameters('region')]"
                  },
                  "svcname": {
                    "value": "[variables('dataStrName')]"
                  },
                  "svctype": {
                    "value": "Microsoft.Storage/storageAccounts"
                  },
                  "zonename": {
                    "value": "[format('privatelink.queue.{0}', environment().suffixes.storage)]"
                  },
                  "groupId": {
                    "value": "queue"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "pesubnetName": {
                    "value": "[parameters('pesubnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.46.61228",
                      "templateHash": "15790817288533340525"
                    }
                  },
                  "parameters": {
                    "vnetName": {
                      "type": "string"
                    },
                    "pesubnetName": {
                      "type": "string"
                    },
                    "region": {
                      "type": "string"
                    },
                    "svcname": {
                      "type": "string"
                    },
                    "svctype": {
                      "type": "string"
                    },
                    "zonename": {
                      "type": "string"
                    },
                    "groupId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "pename": "[format('{0}-{1}-pe', parameters('svcname'), parameters('groupId'))]",
                    "peNicName": "[format('{0}-nic', variables('pename'))]",
                    "svcid": "[resourceId(parameters('svctype'), parameters('svcname'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', variables('pename'), 'default')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "config",
                            "properties": {
                              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zonename'))]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('pename'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2022-07-01",
                      "name": "[variables('pename')]",
                      "location": "[parameters('region')]",
                      "properties": {
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('pename')]",
                            "properties": {
                              "privateLinkServiceId": "[variables('svcid')]",
                              "groupIds": [
                                "[parameters('groupId')]"
                              ]
                            }
                          }
                        ],
                        "customNetworkInterfaceName": "[variables('peNicName')]",
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('pesubnetName'))]"
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "mergeSettings",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "appName": {
                    "value": "[parameters('funcAppName')]"
                  },
                  "settings1": {
                    "value": "[list(format('Microsoft.Web/sites/{0}/config/appsettings', parameters('funcAppName')), '2022-03-01').properties]"
                  },
                  "settings2": {
                    "value": "[union(createObject('AzureWebJobsDataStorage', format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('dataStrName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName')), '2022-05-01').keys[0].value)), variables('eventSourceMap'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.14.46.61228",
                      "templateHash": "2863576707849206433"
                    }
                  },
                  "parameters": {
                    "appName": {
                      "type": "string"
                    },
                    "settings1": {
                      "type": "object"
                    },
                    "settings2": {
                      "type": "object"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/appsettings', parameters('appName'))]",
                      "properties": "[union(parameters('settings1'), parameters('settings2'))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStrName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'platform')]"
      ]
    }
  ]
}